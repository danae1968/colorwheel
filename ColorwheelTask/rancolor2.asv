function [colorTestData]=rancolor2(pms)

%%%function that shows randomly selected colors and checks for color
%%%perception

global rect wPtr
Screen('Preference', 'VisualDebugLevel',0);
Screen('Preference','SkipSyncTests',1); 
Screen('Preference', 'SuppressAllWarnings', 1);

[wPtr,rect]=Screen('Openwindow',max(Screen('Screens')));

pms.numWheelColors=512;
maxRT=4;
numTrials=16;
rectOne=[0 0 100 100];
centerX=rect(3)/2;
centerY=rect(4)/2;
ShowCursor('Arrow'); %we can change the shape of the mouse and then type ShowCursor(newcursor) %MF: wow, that's cool!!
SetMouse(rect(3)/2,rect(4)/2,wPtr);
testOnset=GetSecs();

                          insideRect=[rect(1) rect(2) 0.67*rect(4) 0.67*rect(4)]; %the white oval coordinates
                          outsideRect=[rect(1) rect(2) 0.9*rect(4) 0.9*rect(4)]; %the wheel coordinates
                          rectOne=CenterRectOnPoint(rectOne,centerX,centerY);
                          outsideRect=CenterRectOnPoint(outsideRect,centerX, centerY);
                          insideRect=CenterRectOnPoint(insideRect,centerX,centerY);

                          %define colors
                          colors=hsv(512)*255; %MF: *255 brings them into RGB? DP:yes! they are between 0 and 1 in this form
                          colorangle=360/length(colors);  %convert into pi? ecs
%                           startangle=0:colorangle:360; 
                          origins=0:10:360;
                          [~,pie]=sampledColorMatrix(pms);
                       
                           %depending on number of trials, we first
                              %sample from the middle, then the edges of
                              %the Pie  
                              index=randperm(numTrials);                     
                          for N=1:numTrials
                        
                          if index(N)<=12
                              probePie=pie(index(N)).color;
                              namePie=pie(index(N)).name;
                              probeColorCorrect=probePie(round(length(probePie)/2),:);
                              colorPosition=1;
                          elseif index(N)>12
                              probePie=pie(index(N)-12).color;
                              namePie=pie(index(N)-12).name;
                              probeColorCorrect=probePie(1,:);
                              colorPosition=0;
                          elseif index(N)>24
                              probePie=pie(index(N)-24).color;
                              namePie=pie(index(N)-24).name;
                              probeColorCorrect=probePie(end,:);
                              colorPosition=2;
                          end
                          
                        
%                           probeColorCorrect=datasample(probePie,1);
                          
                          start=randsample(origins,1);
                          startangle=start:colorangle:360+start;  
                          for ind=1:length(colors)
                              Screen('FillArc',wPtr,colors(ind,:),outsideRect,startangle(ind),colorangle);
                          end
                          
                          Screen('FillOval',wPtr,[255 255 255 ],insideRect);
                          Screen('FillRect', wPtr, probeColorCorrect, rectOne'); 
                    
                          Screen('Flip',wPtr)
                           
                         probeOnset=GetSecs();
                                                  
                             [~, secs] = KbCheck;
                             %waits for a click and records
                             [clicks,x,y]=GetClicks(wPtr);
                             if any(clicks)
                                pressTime=GetSecs();
                                respX=x;
                                respY=y;
                                rt=secs-probeOnset;
                             end
                          
                             
                             WaitSecs(0.001);

% clear Screen

 theta=zeros(length(colors),1);
                       for i=1:length(colors)       %MF: length(colors) and numberColors always same number? why use length here and 1 line later numberColors
                           theta(i)=(360*i)/pms.numWheelColors; % MF: smart solution :) so we always go in steps of 360/numberColors.
                       end
                       
                       colortheta=struct; % MF: colortheta will be a structure with numberColors fields linking "color" to "angle" of presentation
                       for n=1:length(colors)
                           colortheta(n).color=colors(n,:); %pick color n from all colors
                          
                           colortheta(n).theta=theta(n)+start; 
                       end
                   
                 [~,respDif,tau,thetaCorrect,radius]=stdev(colortheta,probeColorCorrect,respX,respY,90);
        for ind=1:length(colors)
            Screen('FillArc',wPtr,colors(ind,:),outsideRect,startangle(ind),colorangle);
        end

          if ~isnan('tau')
                 if radius>abs(insideRect(1)-insideRect(3))/2
          Screen('FillArc',wPtr,[0 0 0],outsideRect,tau-0.2,0.2);
%           Screen('FillArc',wPtr,[0 0 0],outsideRect,thetaCorrect-0.2,0.2);
          Screen('FillOval',wPtr,[255 255 255 ],insideRect);
           Screen('FillRect', wPtr, probeColorCorrect, rectOne'); 
          Screen('Flip',wPtr);
           WaitSecs(1);
           
          for ind=1:length(colors)
            Screen('FillArc',wPtr,colors(ind,:),outsideRect,startangle(ind),colorangle);
          end
          Screen('FillArc',wPtr,[0 0 0],outsideRect,tau-0.2,0.2);
          Screen('FillArc',wPtr,[0 0 0],outsideRect,thetaCorrect-0.2,0.2);
          Screen('FillOval',wPtr,[255 255 255 ],insideRect);
  

          if abs(respDif) <=10
                 Screen('TextSize',wPtr,15);
                 message=sprintf('Good Job! you deviated only %d degrees',abs(round(respDif)));
            DrawFormattedText(wPtr, message, 'center', 'center', [0 0 0]);
             else
          %otherwise no feedback
          end
             Screen('Flip',wPtr)
             WaitSecs(2);
                 end
          end
     
%             Screen('TextSize',wPtr,20);
%             DrawFormattedText(wPtr, 'How would you name the color you just saw?\n\n red,orange,yellow,light green, green, blue green, turquoise, cyan, blue, purple, pink or magenda?','center', centerY-100, [0 0 0])
%             reply=Ask(wPtr,'Please type your response and press enter',[],[],'GetString','center','center',15);
%             DrawFormattedText(wPtr, reply, 'center', centerY+100, [0 0 0])
%             Screen('Flip',wPtr)
%             WaitSecs(2)
            
             colorTestData(N).respDif=respDif;  
             colorTestData(N).rt=rt;
             colorTestData(N).probeColor=probeColorCorrect;
%              colorTestData(N).colorName=reply;
             colorTestData(N).pie=probePie;
%              colorTestData(N).pieName=namePie;
             colorTestData(N).colorPosition=colorPosition;
             
                          end  %for N=1:numTrials
                          %for index=randperm(numTrials)
                          filename=sprintf('ColorTest_s%d_pilot1.mat',pms.subNo);
                         
                          if exist (filename,'file')
                                randAttach = round(rand*10000);
                                filename = strcat(filename, sprintf('_%d.mat',randAttach));  
                          end
                           save(filename,'colorTestData')
meanScore=mean([colorTestData.respDif]);
if meanScore>
clear Screen
end


